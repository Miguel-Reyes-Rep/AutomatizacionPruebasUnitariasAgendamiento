import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import internal.GlobalVariable as GlobalVariable
import org.openqa.selenium.Keys as Keys
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject

'----------------------------------------------------'

'This test case script is generated by Katalon Studio'

'Generated date: 30-ene.-2025 02:23:55 p. m.'

'File path: C:\\Users\\miguel.reyes\\Documents\\Pruebas automatizadas Agendamiento DEMO\\Agendamiento.side'

'Generated by: null'

'----------------------------------------------------'
WebUI.openBrowser('')

WebUI.maximizeWindow()

// Paso 1: Navegar a la URL de login
WebUI.navigateToUrl('https://agendamiento-frontend-c-pruebas-ehe5c9fyb7gwehed.eastus2-01.azurewebsites.net/login/ingreso')

// Esperar a que el botón de inicio de sesión esté presente y visible
WebUI.waitForElementPresent(findTestObject('Login/btnLogin'), 10)

WebUI.waitForElementVisible(findTestObject('Login/btnLogin'), 10)

// Hacer clic en el botón de inicio de sesión
WebUI.click(findTestObject('Login/btnLogin'))

// Ingresar el nombre de usuario
WebUI.setText(findTestObject('Login/input_usuario'), 'MiguelPruebas')

// Ingresar la contraseña
WebUI.setText(findTestObject('Login/input_password'), '99081701187Mm.')

// Hacer clic en el reCAPTCHA
WebUI.switchToFrame(findTestObject('Login/iframe_recaptcha'), 0)

WebUI.click(findTestObject('Login/checkbox_recaptcha'))

WebUI.switchToDefaultContent()

// Pausar 30 segundos para que el tester pueda resolver el reCAPTCHA
WebUI.delay(30)

// Hacer clic en el botón de login
WebUI.click(findTestObject('Login/btn_login'))

// Interacciones con el menú
WebUI.mouseOver(findTestObject('Elementos/Menu'))

WebUI.mouseOver(findTestObject('Elementos/Menu'))

// Hacer clic en el icono de configuración
WebUI.click(findTestObject('Elementos/Menu'))

// Interacciones con el submenú
WebUI.mouseOver(findTestObject('Elementos/Menu'))

WebUI.mouseOver(findTestObject('Elementos/Menu'))

WebUI.mouseOver(findTestObject('Elementos/Menu'))

// Navegar a la sección de Parametrizacion
WebUI.click(findTestObject('Elementos/Parametrizacion'))

// Navegar a la sección de especialidad
WebUI.click(findTestObject('Elementos/Elementos'))

// Crear nueva especialidad
WebUI.click(findTestObject('Elementos/Agregar'))

// Click especialidad
WebUI.click(findTestObject('Elementos/contieneSelect'))

// Selecciona una especialidad
WebUI.click(findTestObject('Elementos/ItemRequiere'))

// Hacer clic en el elemento con el ID 'inputBaseelementName'
WebUI.click(findTestObject('Elementos/inputBaseelementName'))

// Generar un término médico aleatorio
def terminosMedicos = ['Resolución espacial', 'Contraste', 'Resolución temporal', 'Artefactos', 'Ruido', 'Profundidad de campo'
    , 'Dosis de radiación', 'Tiempo de adquisición', 'Interpretación clínica', 'Formato de imagen']

// Seleccionar un término aleatorio
Random random = new Random()

def terminoAleatorio = terminosMedicos[random.nextInt(terminosMedicos.size())]

// Escribir el término aleatorio en el campo de texto con el ID 'inputBaseelementName'
WebUI.setText(findTestObject('Elementos/inputBaseelementName'), terminoAleatorio)

// Hacer clic subir tiempo particular
WebUI.click(findTestObject('Elementos/Up_TiempoParticular'))

// Hacer clic subir tiempo particular
WebUI.click(findTestObject('Elementos/Up_TiempoParticular'))

// Hacer clic subir tiempo particular
WebUI.click(findTestObject('Elementos/Up_TiempoParticular'))

//Elegir condicion especial aleatorio
WebUI.click(findTestObject('Elementos/inputBaseidSpecialCondition'))

WebUI.waitForElementVisible(findTestObject('Elementos/cdkOverlayDiv'), 10)

String script = '''
const overlayDiv = document.evaluate('//div[contains(@id, "cdk-overlay")]//ul', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
if (overlayDiv) {
    const items = overlayDiv.getElementsByTagName('li');
    if (items.length > 0) {
        const randomIndex = Math.floor(Math.random() * items.length);
        items[randomIndex].click();
    } else {
        throw new Error('No se encontraron elementos <li> en la lista.');
    }
} else {
    throw new Error('No se encontró el contenedor de la lista desplegable.');
}
'''

WebUI.executeJavaScript(script, null)

// Hacer clic en el elemento con el ID 'inputBaseobservationsundefined'
WebUI.click(findTestObject('Elementos/inputBaseobservationsundefined'))

// Generar un Observacion aleatorio
def terminosObser = ['Equilibrio entre resolución y dosis de radiación', 'Importancia del contraste', 'Avances en tecnología']

// Seleccionar un término aleatorio
Random random2 = new Random()

def terminoAleatorio2 = terminosObser[random2.nextInt(terminosObser.size())]

// Escribir el término aleatorio en el campo de texto con el ID 'inputBaseobservationsundefined'
WebUI.setText(findTestObject('Elementos/inputBaseobservationsundefined'), terminoAleatorio2)

// Hacer clic en guardar
WebUI.click(findTestObject('Elementos/Guardar'))

// Hacer clic en aceptar
WebUI.click(findTestObject('Elementos/Aceptar'))

// Click Ultima Pagina
WebUI.click(findTestObject('Elementos/Ultima_Page'))

// Cambiar estado
WebUI.waitForElementVisible(findTestObject('Elementos/Estado'), 10)

WebUI.waitForElementPresent(findTestObject('Elementos/Estado'), 10)

WebUI.click(findTestObject('Elementos/Estado'))

// Hacer clic en aceptar
WebUI.click(findTestObject('Elementos/Aceptar'))

// Cambiar estado
WebUI.waitForElementVisible(findTestObject('Elementos/Estado'), 10)

WebUI.waitForElementPresent(findTestObject('Elementos/Estado'), 10)

WebUI.click(findTestObject('Elementos/Estado'))

// Hacer clic en aceptar
WebUI.click(findTestObject('Elementos/Aceptar'))

// Editar la última especialidad creada
WebUI.waitForElementVisible(findTestObject('Elementos/Editar'), 10)

WebUI.waitForElementPresent(findTestObject('Elementos/Editar'), 10)

WebUI.click(findTestObject('Elementos/Editar'))

terminoAleatorio = (terminosMedicos[random.nextInt(terminosMedicos.size())])

WebUI.setText(findTestObject('Elementos/inputBaseelementName'), terminoAleatorio)

//Elegir condicion especial aleatorio
WebUI.click(findTestObject('Elementos/inputBaseidSpecialCondition'))

WebUI.waitForElementVisible(findTestObject('Elementos/cdkOverlayDiv'), 10)

String script2 = '''
const overlayDiv = document.evaluate('//div[contains(@id, "cdk-overlay")]//ul', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
if (overlayDiv) {
    const items = overlayDiv.getElementsByTagName('li');
    if (items.length > 0) {
        const randomIndex = Math.floor(Math.random() * items.length);
        items[randomIndex].click();
    } else {
        throw new Error('No se encontraron elementos <li> en la lista.');
    }
} else {
    throw new Error('No se encontró el contenedor de la lista desplegable.');
}
'''

WebUI.executeJavaScript(script2, null)

terminoAleatorio2 = (terminosObser[random2.nextInt(terminosObser.size())])

WebUI.setText(findTestObject('Elementos/inputBaseobservationsundefined'), terminoAleatorio2)

// Hacer clic subir tiempo particular
WebUI.click(findTestObject('Elementos/Up_TiempoParticular'))

// Hacer clic subir tiempo particular
WebUI.click(findTestObject('Elementos/Up_TiempoParticular'))

// Hacer clic subir tiempo particular
WebUI.click(findTestObject('Elementos/Up_TiempoParticular'))

// Hacer clic en guardar
WebUI.click(findTestObject('Elementos/Guardar'))

// Hacer clic en aceptar
WebUI.click(findTestObject('Elementos/Aceptar'))

// Click Ultima Pagina
WebUI.click(findTestObject('Elementos/Ultima_Page'))

// Eliminar la último elemento
WebUI.waitForElementVisible(findTestObject('Elementos/Eliminar'), 10)

WebUI.waitForElementPresent(findTestObject('Elementos/Eliminar'), 10)

WebUI.click(findTestObject('Elementos/Eliminar'))

WebUI.click(findTestObject('Elementos/Aceptar'))

// Cerrar navegador
WebUI.closeBrowser()
